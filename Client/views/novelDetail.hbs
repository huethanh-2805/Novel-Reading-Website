<div class="container-fluid">
  <div class="title-list mt-4">
    <h3>THÔNG TIN CHI TIẾT</h3>
  </div>
  <div class="product-detail">
    <div class="row">
      <div class="col-md-5 d-flex flex-column align-items-center">
        <img src="{{novel.image}}" alt="{{novel.title}}" class="img-fluid novel-img">
        <div class="d-flex justify-content-around w-50 mt-3">
          {{#ifEqual currentChapter -1}}
          <a href="" style="background: #696969; color: white; pointer-events: none;" class="btn mx-2">Đọc tiếp</a>
          {{else}}
          <a href="/{{novel.slug}}/chuong-{{currentChapter}}?server=1" style="background: #EB455F; color: white;"
            class="btn mx-2">Đọc tiếp</a>
          {{/ifEqual}}
          <a href="/{{novel.slug}}/chuong-1?server=1" style="background: #EB455F; color: white;" class="btn mx-2">Đọc từ đầu</a>
        </div>
      </div>
      <div class="col-md-7 product-info">
        <div class="info">
          <h1>{{novel.title}}</h1>
          <hr>
          <p><strong>Tác giả:</strong> {{novel.author}}</p>
          <p><strong>Thể loại:</strong>
            {{#eachGenres novel.genres novel.genreUrls}}
            <a class="novel-genres" href="{{url}}">{{name}}</a>{{#if last}}{{else}}, {{/if}}
            {{/eachGenres}}
          </p>
        </div>
        <div class="description">
          <p id="novel-description">{{{convertToHtml novel.description}}}</p>
          <button id="toggle-description" style="display: none;">Xem thêm</button>
        </div>
        <div class="d-flex justify-content-between align-items-center">
          <p style="font-size: 1em;"><strong>{{book.price}}</strong></p>
        </div>
        <hr>
      </div>
    </div>
  </div>

  <div class="title-list mt-4">
    <h3>DANH SÁCH CHƯƠNG</h3>
    <hr>
    <div>
      <div id="chapter-list" class="row">
        <div class="col-xs-12 col-sm-6">
          <ul id="chapter-list-left">
            {{#each (splitArray novel.chapters 2 0)}}
            <li>
              <a class="text-link" href="/{{this.chapterSlug}}">{{this.chapterTitle}}</a>
            </li>
            {{/each}}
          </ul>
        </div>
        <div class="col-xs-12 col-sm-6">
          <ul id="chapter-list-right">
            {{#each (splitArray novel.chapters 2 1)}}
            <li>
              <a class="text-link" href="/{{this.chapterSlug}}/">{{this.chapterTitle}}</a>
            </li>
            {{/each}}
          </ul>
        </div>
      </div>
    </div>
  </div>

  <div class="container mt-4 mb-4">
    <nav aria-label="Page navigation example" class="mb-4">
      <ul class="pagination justify-content-center">
        <li class="page-item">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="prev-page">
            <span aria-hidden="true">&laquo;</span>
          </a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="page-1">1</a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="page-2">2</a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="page-3">3</a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="page-4">4</a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="page-5">5</a>
        </li>
        <li class="page-item dynamic">
          <a class="page-link custom-pagination-background custom-page-number" href="#"
            id="page-last">{{novel.totalPage}}</a>
        </li>
        <li class="page-item">
          <a class="page-link custom-pagination-background custom-page-number" href="#" id="next-page">
            <span aria-hidden="true">&raquo;</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const descriptionElement = document.getElementById('novel-description');
    const toggleButton = document.getElementById('toggle-description');
    const maxLength = 500; // Giới hạn độ dài mô tả

    if (descriptionElement.innerText.length > maxLength) {
      const originalText = descriptionElement.innerHTML;
      const truncatedText = originalText.substring(0, maxLength) + '...';

      descriptionElement.innerHTML = truncatedText;
      toggleButton.style.display = 'inline';

      toggleButton.addEventListener('click', function () {
        if (descriptionElement.innerHTML === truncatedText) {
          descriptionElement.innerHTML = originalText;
          toggleButton.innerText = 'Thu gọn';
        } else {
          descriptionElement.innerHTML = truncatedText;
          toggleButton.innerText = 'Xem thêm';
        }
      });
    }
  });

  $(document).ready(function () {
    let currentPage = 1;
    let totalPage = parseInt(`{{novel.totalPage}}`);
    const name = `{{novel.slug}}`;

    $(document).on('click', '.page-link', function (e) {
      e.preventDefault();
      const page = $(this).text();
      if (!isNaN(parseInt(page))) {
        currentPage = parseInt(page);
        fetchChapters(currentPage);
      }
    });

    // Event listener for next and previous buttons
    $('#prev-page').click(function (e) {
      e.preventDefault();
      if (currentPage > 1) {
        currentPage--;
        fetchChapters(currentPage);
      }
    });

    $('#next-page').click(function (e) {
      e.preventDefault();
      if (currentPage < totalPage) {
        currentPage++;
        fetchChapters(currentPage);
      }
    });

    function fetchChapters(page) {
      $.ajax({
        url: `http://localhost:3000/ajax?type=page_select&name=${name}&page=${page}`,
        method: 'GET',
        success: function (data) {
          updateChapterList(data.chapters);
          updatePagination(page, totalPage);
        },
        error: function (err) {
          console.error("Error fetching chapters:", err);
        }
      });
    }

    function updatePagination(currentPage, totalPage) {
      const paginationContainer = $('.pagination');
      paginationContainer.find('.page-item.dynamic').remove();

      let pages = [];
      if (totalPage <= 7) {
        pages = [...Array(totalPage).keys()].map(i => i + 1);
      } else if (currentPage <= 4) {
        pages = [1, 2, 3, 4, 5, '...', totalPage];
      } else if (currentPage >= totalPage - 3) {
        pages = [1, '...', totalPage - 4, totalPage - 3, totalPage - 2, totalPage - 1, totalPage];
      } else {
        pages = [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPage];
      }

      pages.forEach(page => {
        const pageItem = $('<li>', { class: 'page-item dynamic' });
        if (page === '...') {
          pageItem.append($('<span>', { class: 'page-link', text: '...' }));
        } else {
          const pageLink = $('<a>', {
            class: 'page-link custom-pagination-background custom-page-number',
            href: '#',
            text: page
          }).click(function () {
            if (currentPage !== page) {
              currentPage = page;
              fetchChapters(currentPage);
            }
          });

          if (page === currentPage) {
            pageItem.addClass('active');
          }

          pageItem.append(pageLink);
        }

        $('#next-page').parent().before(pageItem);
      });
    }

    function updateChapterList(chapters) {
      const leftList = $('#chapter-list-left');
      const rightList = $('#chapter-list-right');
      leftList.empty();
      rightList.empty();

      chapters.forEach((chapter, index) => {
        const listItem = `<li><a class="text-link" href="/${chapter.chapterSlug}">${chapter.chapterTitle}</a></li>`;
        if (index % 2 === 0) {
          leftList.append(listItem);
        } else {
          rightList.append(listItem);
        }
      });
    }

    fetchChapters(currentPage);
  });
</script>