<div class="container mt-4" id="mainContainer">
    <div class="d-flex align-items-center justify-content-center">
        <div class="p-2 flex-shrink-1 ms-auto">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-export" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                Xuất ebook
            </button>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
            aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title text-center w-100">Xuất ebook</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="export-form">
                            <li class="d-flex justify-content: space-between; align-items-center mt-2">
                                <a class="dropdown-export-text"><strong>Chọn chương</strong></a>
                                <select id="chapterExport" class="form-select custom-select-export "
                                    aria-label="Default select example">
                                    <option value="All" selected>All</option>
                                    {{#each chapters}}
                                    <option value='chuong-{{sum @index 1}}'>{{chapterTitle}}</option>
                                    {{/each}}
                                </select>
                            </li>
                            <li class="d-flex justify-content: space-between; align-items-center mt-2">
                                <a class="dropdown-export-text"><strong>Dạng tập tin</strong></a>
                                <select id="exportType" class="form-select custom-select-export "
                                    aria-label="Default select example">
                                    <option value="prc" selected>mobi</option>
                                    <option value="epub">epub</option>
                                    <option value="pdf">pdf</option>
                                </select>
                            </li>
                            <div class="d-grid gap-2 col-4 mx-auto mt-3">
                                <button type="submit" class="btn btn-export-file">Xuất file</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="name-novel">
        {{title}}
    </div>
    <div class="text-name-chap text-center">
        {{content.chapterTitle}}
    </div>
</div>

<div id="background-div" class="text-center mt-4" style="background-color: #EFF8FE;">
    <br>
    <p>Nếu không xem được truyện vui lòng đổi <strong>“SERVER ẢNH”</strong> bên dưới</p>
    <div id="button-container">
        {{#times totalServer}}
           <button type="button" id="server{{sum @index 1}}-btn" class="server-button btn btn-secondary mb-4"><a style="color: #EFF8FE;"
                class="text-link" href="{{baseUrl}}?server={{sum @index 1}}">Server {{sum @index 1}}</a></button>
           
        {{/times}}
        
    </div>
</div>

<div class="container mt-4 mb-4">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item">
                <a class="page-link select-chap" href="{{currentNovel}}/chuong-{{extract currentChapter 1}}?server={{server}}"
                    aria-label="Previous">
                    <span aria-hidden="true"><i class="fa-solid fa-angles-left"></i> Chương trước</span>
                </a>
            </li>
            <li class="page-item">
                <select id="chapterSelect" class="form-select select-chapter" aria-label="Default select example">
                    <option selected>Chương {{currentChapter}}</option>
                    {{#each chapters}}
                    <option value="{{this.chapterTitle}}" data-href="/{{this.chapterSlug}}?server={{../server}}">Chương {{sum @index 1}}
                    </option></a>
                    {{/each}}
                </select>
            </li>
            <li class="page-item">
                <a class="page-link select-chap" href="{{currentNovel}}/chuong-{{sum currentChapter 1}}?server={{server}}"
                    aria-label="Next">
                    <span aria-hidden="true">Chương sau <i class="fa-solid fa-angles-right"></i></span>
                </a>
            </li>
        </ul>
    </nav>

    <div id="text-content" class="text-content text-justify mb-4">
        {{#if content.chapterContent}}
          {{{convertToHtml content.chapterContent}}}
        {{else}}
           <span>Không tìm thấy dữ liệu</span>
        {{/if}}
    </div>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item">
                <a class="page-link select-chap" href="#" aria-label="Previous">
                    <span aria-hidden="true"><i class="fa-solid fa-angles-left"></i> Chương trước</span>
                </a>
            </li>
            <li class="page-item">
                <select id="chapterSelect1" class="form-select select-chapter" aria-label="Default select example">
                    <option selected>Chương {{currentChapter}}</option>
                    {{#each chapters}}
                    <option value="{{this.chapterTitle}}" data-href="/{{this.chapterSlug}}/">Chương {{sum @index 1}}
                    </option></a>
                    {{/each}}
                </select>
            </li>
            <li class="page-item">
                <a class="page-link select-chap" href="#" aria-label="Next">
                    <span aria-hidden="true">Chương sau <i class="fa-solid fa-angles-right"></i></span>
                </a>
            </li>
        </ul>
    </nav>

    {{!-- back to top button --}}
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top-btn align-items-center justify-content-center">
        <i class="fa-solid fa-arrow-up"></i>
    </a>
</div>

<input type="hidden" value="{{currentNovel}}" id="currNovel"></input>

<script>
    
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
   
    function getParameterByName(name, url = window.location.href) {
        name = name.replace(/[\[\]]/g, '\\$&');
        let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }

    let server = getParameterByName('server');
    document.getElementById(`server${server}-btn`).classList.remove('btn-secondary');
    document.getElementById(`server${server}-btn`).classList.add('btn-success');

    // Get the container element that holds all buttons

    document.addEventListener('DOMContentLoaded', function () {
       
        const chapterSelect = document.getElementById('chapterSelect');
        const chapterSelect1 = document.getElementById('chapterSelect1');

        chapterSelect.addEventListener('change', function () {
            const selectedOption = chapterSelect.options[chapterSelect.selectedIndex];
            const url = selectedOption.getAttribute('data-href');
            console.log(url);
            if (url) {
                window.location.href = url;
            }
        });

        chapterSelect1.addEventListener('change', function () {
            const selectedOption = chapterSelect.options[chapterSelect.selectedIndex];
            const url = selectedOption.getAttribute('data-href');

            if (url) {
                window.location.href = url;
            }
        });

        const ids = ["text-select1", "text-select2", "text-select3", "text-select4", "text-content-select",
            "font-select", "text-color-select", "line-height-select"];

        ids.forEach(id => {
            document.getElementById(id).removeAttribute("style");
        });


    });
    document.addEventListener("DOMContentLoaded", function () {
        /*Thay đổi màu nền*/
        var backgroundColorSelect = document.querySelector("#background-color-select");
        var backgroundDiv = document.querySelector("#background-div");

        // Gán sự kiện onchange cho select element
        backgroundColorSelect.addEventListener("change", function () {
            var selectedBackgroundColor = backgroundColorSelect.value;
            localStorage.setItem("selectedBackgroundColor", selectedBackgroundColor);
            applySelectedBackgroundColor();
        });

        function applySelectedBackgroundColor() {
            var storedBackgroundColor = localStorage.getItem("selectedBackgroundColor");
            if (storedBackgroundColor) {
                var bodyElement = document.querySelector("body");
                bodyElement.classList.remove("bg-white", "bg-cream", "bg-peachpuff", "bg-gray");
                bodyElement.classList.add(storedBackgroundColor);
                backgroundColorSelect.value = storedBackgroundColor; // Cập nhật giá trị được chọn trên dropdown menu
                backgroundDiv.style.backgroundColor = storedBackgroundColor === "bg-white" ? "#EFF8FE" : "white";
            }
        }

        applySelectedBackgroundColor();

        /*Thay đổi cỡ chữ*/
        var textContentSelect = document.querySelector("#text-content-select");

        textContentSelect.addEventListener("change", function () {
            var selectedValue = textContentSelect.value;
            localStorage.setItem("selectedTextSize", selectedValue);
            applySelectedTextContent(selectedValue);
        });

        function applySelectedTextContent(selectedValue) {
            var textContentElement = document.querySelector("#text-content");
            textContentElement.classList.remove("size-16", "size-18", "size-20", "size-22", "size-24", "size-26", "size-28", "size-30", "size-32", "size-34", "size-36", "size-38", "size-40");
            textContentElement.classList.add(selectedValue);
            textContentSelect.value = selectedValue; // Cập nhật giá trị được chọn trên dropdown menu
        }

        var storedTextSize = localStorage.getItem("selectedTextSize");
        if (storedTextSize) {
            applySelectedTextContent(storedTextSize);
        } else {
            applySelectedTextContent(textContentSelect.value);
        }

        /*Thay đổi font chữ*/
        var fontSelect = document.querySelector("#font-select");

        fontSelect.addEventListener("change", function () {
            var selectedFont = fontSelect.value;
            localStorage.setItem("selectedFont", selectedFont);
            applySelectedFont(selectedFont);
        });

        function applySelectedFont(selectedFont) {
            var textContentElement = document.querySelector("#text-content");
            textContentElement.classList.remove("font-roboto", "font-timesnewroman", "font-helvetica", "font-arial");
            textContentElement.classList.add(selectedFont);
            fontSelect.value = selectedFont; // Cập nhật giá trị được chọn trên dropdown menu
        }

        var storedFont = localStorage.getItem("selectedFont");
        if (storedFont) {
            applySelectedFont(storedFont);
        } else {
            applySelectedFont(fontSelect.value);
        }

        /*Thay đổi màu chữ*/
        var textColorSelect = document.querySelector("#text-color-select");

        textColorSelect.addEventListener("change", function () {
            var selectedColor = textColorSelect.value;
            localStorage.setItem("selectedColor", selectedColor);
            applySelectedTextColor(selectedColor);
        });

        function applySelectedTextColor(selectedColor) {
            var textContentElement = document.querySelector("#text-content");
            textContentElement.classList.remove("text-color-black", "text-color-red", "text-color-green", "text-color-blue", "text-color-orange");
            textContentElement.classList.add(selectedColor);
            textColorSelect.value = selectedColor; // Cập nhật giá trị được chọn trên dropdown menu
        }

        var storedColor = localStorage.getItem("selectedColor");
        if (storedColor) {
            applySelectedTextColor(storedColor);
        } else {
            applySelectedTextColor(textColorSelect.value);
        }

        /*Thay đổi độ giãn dòng*/
        var lineHeightSelect = document.querySelector("#line-height-select");

        lineHeightSelect.addEventListener("change", function () {
            var selectedLineHeight = lineHeightSelect.value;
            localStorage.setItem("selectedLineHeight", selectedLineHeight);
            applySelectedLineHeight(selectedLineHeight);
        });

        function applySelectedLineHeight(selectedLineHeight) {
            var textContentElement = document.querySelector("#text-content");
            textContentElement.classList.remove("line-height-1", "line-height-1-1-5", "line-height-1-5", "line-height-2", "line-height-2-5", "line-height-3");
            textContentElement.classList.add(selectedLineHeight);
            lineHeightSelect.value = selectedLineHeight; // Cập nhật giá trị được chọn trên dropdown menu
        }

        var storedLineHeight = localStorage.getItem("selectedLineHeight");
        if (storedLineHeight) {
            applySelectedLineHeight(storedLineHeight);
        } else {
            applySelectedLineHeight(lineHeightSelect.value);
        }
    });

    // back to top button function
    // Khi người dùng cuộn xuống 20px từ đầu trang, hiện nút
    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        const backToTopBtn = document.getElementsByClassName("back-to-top-btn")[0];
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            backToTopBtn.style.display = "block";
        } else {
            backToTopBtn.style.display = "none";
        }
    }

    // Khi người dùng nhấn vào nút, cuộn lên đầu trang
    document.getElementsByClassName("back-to-top-btn")[0].addEventListener('click', function () {
        document.body.scrollTop = 0; // Cho Safari
        document.documentElement.scrollTop = 0; // Cho Chrome, Firefox, IE và Opera
    });
    $(document).ready(function () {
        console.log("kfkdk")
        $('#searchForm').on('submit', function (e) {
            e.preventDefault();
            var searchInput = $('#searchInput').val();
            window.location.href = 'http://localhost:3000/search?name=' + searchInput;
        });

        $('#export-form').on('submit', async function (e) {
            console.log("in")

            e.preventDefault();
            console.log("in")
            const exportType = $('#exportType').val();
            const chapterExport = $('#chapterExport').val();
            const currNovel = $('#currNovel').val()
            const response = await fetch('http://localhost:3000/export', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ chapterExport, exportType, currNovel })
            });
            const filenameSlug = currNovel.slice(1) + '-' + chapterExport;
            const filename = filenameSlug.replace(/-/g, '_');
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            var fileExtension;
            if (exportType === 'pdf') {
                fileExtension = 'pdf';
            } else if (exportType === 'epub') {
                fileExtension = 'epub';
            } else if (exportType === 'prc') {
                fileExtension = 'mobi';
            }
            a.download = `${filename}.${fileExtension}`;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        });
    }
    );

</script>